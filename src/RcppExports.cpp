// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// unibisection
Rcpp::List unibisection(Rcpp::Function gp, Rcpp::NumericVector a, Rcpp::NumericVector b, double eps, int maxIter);
RcppExport SEXP _optimization_unibisection(SEXP gpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP epsSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type gp(gpSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(unibisection(gp, a, b, eps, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// unifisher
Rcpp::List unifisher(Rcpp::Function lp, Rcpp::Function fisherInfo, int n, Rcpp::NumericVector a, double eps, int maxIter);
RcppExport SEXP _optimization_unifisher(SEXP lpSEXP, SEXP fisherInfoSEXP, SEXP nSEXP, SEXP aSEXP, SEXP epsSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type lp(lpSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type fisherInfo(fisherInfoSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(unifisher(lp, fisherInfo, n, a, eps, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// uninewton
Rcpp::List uninewton(Rcpp::Function gp, Rcpp::Function gpp, Rcpp::NumericVector a, double eps, int maxIter);
RcppExport SEXP _optimization_uninewton(SEXP gpSEXP, SEXP gppSEXP, SEXP aSEXP, SEXP epsSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type gp(gpSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type gpp(gppSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(uninewton(gp, gpp, a, eps, maxIter));
    return rcpp_result_gen;
END_RCPP
}
// unisecant
Rcpp::List unisecant(Rcpp::Function gp, Rcpp::NumericVector a, Rcpp::NumericVector b, double eps, int maxIter);
RcppExport SEXP _optimization_unisecant(SEXP gpSEXP, SEXP aSEXP, SEXP bSEXP, SEXP epsSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type gp(gpSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    rcpp_result_gen = Rcpp::wrap(unisecant(gp, a, b, eps, maxIter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_optimization_unibisection", (DL_FUNC) &_optimization_unibisection, 5},
    {"_optimization_unifisher", (DL_FUNC) &_optimization_unifisher, 6},
    {"_optimization_uninewton", (DL_FUNC) &_optimization_uninewton, 5},
    {"_optimization_unisecant", (DL_FUNC) &_optimization_unisecant, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_optimization(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
